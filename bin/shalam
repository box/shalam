#!/usr/bin/env node

var fs = require('fs');
var path = require('path');

var argv = require('minimist')(process.argv.slice(2));

var main = require('../lib/main');
var git = require('../lib/git');


function help() {
    console.log('Shalam Usage:');
    console.log('    shalam path/to/css path/to/images destination/path/for/sprite.png');
}

function runPackageJSON(packageJSONPath) {
    console.log('Found package.json: ' + packageJSONPath);
    var contents = fs.readFileSync(packageJSONPath).toString();
    var contentsParsed = JSON.parse(contents);

    if (!('shalam' in contentsParsed) || !contentsParsed.shalam.length) {
        console.warn('No shalam instructions found in package.json!');
        return;
    }

    processJSONRules(contentsParsed.shalam, path.dirname(packageJSONPath));
}

function runShalamJSON(shalamJSONPath) {
    console.log('Found shalam.json: ' + shalamJSONPath);
    var contents = fs.readFileSync(shalamJSONPath).toString();
    processJSONRules(JSON.parse(contents), path.dirname(shalamJSONPath));
}

function processJSONRules(rules, dirname) {
    rules.forEach(function(instruction) {
        var imgPath = path.resolve(dirname, instruction.img);
        var spritePath = path.resolve(dirname, instruction.sprite);

        if (git.isGitURI(instruction.css)) {
            console.log('Cloning "' + instruction.css + '"...');
            git.cloneGitURI(instruction.css, function(err, cssPath) {
                setImmediate(main.run.bind(main), cssPath, imgPath, spritePath);
            });
            return;
        }

        var cssPath = path.resolve(dirname, instruction.css);

        setImmediate(main.run.bind(main), cssPath, imgPath, spritePath);
    });
    console.log(rules.length + ' instructions successfully processed');
}


if ('help' in argv) {
    help();
    process.exit(0);
}

if ('package' in argv) {
    var basePath = process.cwd();
    var packagePath;
    while (basePath !== '/') {
        // package.json
        packagePath = path.resolve(basePath, 'package.json');
        if (fs.existsSync(packagePath)) {
            runPackageJSON(packagePath);
            process.exit(0);
        }

        // shalam.json
        packagePath = path.resolve(basePath, 'shalam.json');
        if (fs.existsSync(packagePath)) {
            runShalamJSON(packagePath);
            process.exit(0);
        }

        basePath = path.resolve(basePath, '../');
    }

    console.error('Could not find package.json');
    process.exit(1);
}

if (argv._.length !== 3) {
    help();
    process.exit(0);
}

main.run(argv._[0], argv._[1], argv._[2]);
